server {
  listen 80 default_server;
  server_name _;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;

  server_name kangalocal;

  ## Access and error logs.
  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log info;

  ## Keep alive timeout set to a greater value for SSL/TLS.
  keepalive_timeout 75 75;

  # SSL
  if ($ssl_client_verify != "SUCCESS") { return 407; }

  # Combined CA certs include self signed CA and DoD CA Certs
  ssl_client_certificate /etc/nginx/tls/ca-combined.crt;

  # Cert/Key from self signed CA
  ssl_certificate /etc/nginx/tls/server.crt;
  ssl_certificate_key /etc/nginx/tls/server.key;

  ssl_session_timeout  5m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;
  ssl_verify_client on;
  ssl_verify_depth 4; # Allow intermediate CAs

  add_header Strict-Transport-Security max-age=15768000;

  # Inform the proxyed app which user had connected to this TLS endpoint
  add_header X-Subject-DN $ssl_client_s_dn;
  add_header X-Client-Verified $ssl_client_verify;

  proxy_read_timeout 900;
  proxy_connect_timeout 900;
  proxy_send_timeout 900;

  location /static/ {
     autoindex on;
     root   /var/www/;
  }

  location / {
    access_log off;
    proxy_pass http://app:8080;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
  }

  root /var/www/example.com/;
  index index.html;
}
